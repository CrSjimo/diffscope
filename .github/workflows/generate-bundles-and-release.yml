name: Generate Bundles and Release
on:
  push:
    tags:
      - "v*"

jobs:
  Build:
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest]
    
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Initialize Building Environment
        uses: ./.github/actions/init-build
        with:
          os: ${{ matrix.os }}

      - name: Build DiffScope
        shell: pwsh
        run: |
          cmake -B build -G Ninja `
            -DCMAKE_BUILD_TYPE=Release `
            -DCMAKE_TOOLCHAIN_FILE="${{ env.VCPKG_ROOT_DIR }}/scripts/buildsystems/vcpkg.cmake" `
            -DTALCS_DEVICE_ENABLE_ASIO:BOOL=ON `
            -DTALCS_ASIOSDK_DIR=${{ env.ASIOSDK_DIR }} `
            -DCMAKE_INSTALL_PREFIX=installed
          cmake --build build --target all
          cmake --build build --target install
          Write-Output DIFFSCOPE_INSTALLED_DIR=$(Resolve-Path -Path installed) >> $env:GITHUB_ENV

      - name: Build DiffScope Bridge
        shell: pwsh
        run: |
          cd scripts/setup/diffscope-bridge
          cmake -B build -G Ninja `
            -DCMAKE_BUILD_TYPE=Release `
            -DCMAKE_TOOLCHAIN_FILE="${{ env.VCPKG_ROOT_DIR }}/scripts/buildsystems/vcpkg.cmake" `
            -DVCPKG_INSTALLED_DIR="${{ env.VCPKG_ROOT_DIR }}/bridge_installed" `
            -DVCPKG_MANIFEST_MODE:BOOL=OFF `
            -DVCPKG_TARGET_TRIPLET=${{ env.VCPKG_TRIPLET_STATIC }}
          cmake --build build --target all
          Write-Output DIFFSCOPE_BRIDGE_ARTEFACTS_DIR=$(Resolve-Path -Path build/DiffScopeBridge_artefacts/Release) >> $env:GITHUB_ENV

      - name: Create installer (Windows)
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          $InnoSetupLanguagesDir = Join-Path -Path $(Split-Path -Parent $(Get-Command ISCC.exe).Source) -ChildPath Languages
          Invoke-WebRequest -Uri 'https://raw.githubusercontent.com/jrsoftware/issrc/f59a90485af28067626e60ef7e42336e00ae7472/Files/Languages/Unofficial/ChineseSimplified.isl' -OutFile $InnoSetupLanguagesDir/ChineseSimplified.isl
          Invoke-WebRequest -Uri 'https://raw.githubusercontent.com/jrsoftware/issrc/e5e138e67bacd650650eac489fa861274a4b81ce/Files/Languages/Unofficial/ChineseTraditional.isl' -OutFile $InnoSetupLanguagesDir/ChineseTraditional.isl
          $content = Get-Content build/CMakeCache.txt
          $variableValues = @{}
          foreach ($line in $content) {
              $pattern = "^\s*(.*):(.*)=(.*)$"
              if ($line -Match $pattern) {
                  $key = $matches[1].Trim()
                  $value = $matches[3].Trim()
                  $variableValues[$key] = $value
              }
          }

          $env:SETUP_APP_NAME = $variableValues.CMAKE_PROJECT_NAME
          $env:SETUP_APP_VERSION = $variableValues.CMAKE_PROJECT_VERSION
          $env:SETUP_APP_INSTALLED_DIR = $env:DIFFSCOPE_INSTALLED_DIR
          $env:SETUP_APP_BRIDGE_ARTEFACTS_DIR = $env:DIFFSCOPE_BRIDGE_ARTEFACTS_DIR
          Invoke-WebRequest -Uri "https://www.gnu.org/licenses/gpl-3.0.rtf" -OutFile gpl-3.0.rtf
          $env:GPL3_LICENSE_PATH = Resolve-Path -Path gpl-3.0.rtf

          ISCC.exe scripts/setup/windows/setup.iss

          Write-Output PACKAGE_PATH=$(Resolve-Path -Path scripts/setup/windows/Output/diffscope_setup.exe) >> $env:GITHUB_ENV

      - name: Create DMG bundle (macOS)
        if: matrix.os == 'macos-latest'
        shell: pwsh
        run: |
          cd scripts/setup/macos
          Invoke-WebRequest -Uri "http://s.sudre.free.fr/Software/files/Packages.dmg" -OutFile Packages.dmg
          mkdir Packages
          hdiutil attach -mountpoint Packages Packages.dmg
          sudo installer -pkg 'Packages/Install Packages.pkg' -target /
          Invoke-WebRequest -Uri "https://www.gnu.org/licenses/gpl-3.0.rtf" -OutFile gpl-3.0.rtf
          ln -s $env:DIFFSCOPE_BRIDGE_ARTEFACTS_DIR diffscope-bridge-artefacts
          packagesbuild diffscope-bridge-dist.pkgproj
          npm install
          node create-dmg.js $env:DIFFSCOPE_INSTALLED_DIR/DiffScope.app 'DiffScope Bridge.pkg' DiffScope.dmg
          Write-Output PACKAGE_PATH=$(Resolve-Path -Path DiffScope.dmg) >> $env:GITHUB_ENV

      - name: Upload release file
        uses: actions/upload-artifact@v3
        with:
          name: diffscope-${{ env.VCPKG_TRIPLET }}-${{ github.ref_name }}
          path: ${{ env.PACKAGE_PATH }}
  Release:
    runs-on: ubuntu-latest
    needs: Build
    steps:
      - name: Get artifacts
        uses: actions/download-artifact@v4
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          files: |
            diffscope-*
